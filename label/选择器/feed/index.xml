<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>选择器 &#8211; 个人随笔</title>
	<atom:link href="/label/%E9%80%89%E6%8B%A9%E5%99%A8/feed" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Sun, 20 May 2018 01:24:07 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.6.1</generator>

<image>
	<url>/wp-content/uploads/2022/01/cropped-截屏2022-01-01-18.57.09-32x32.png</url>
	<title>选择器 &#8211; 个人随笔</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Jquery（一）选择器、操作类、直接样式操作、偏移、操作 HTML 和文本、值操作、Each 循环、复选框选择</title>
		<link>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/3458.html</link>
					<comments>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/3458.html#respond</comments>
		
		<dc:creator><![CDATA[Mr.Lee]]></dc:creator>
		<pubDate>Sat, 19 May 2018 09:51:01 +0000</pubDate>
				<category><![CDATA[Jquery]]></category>
		<category><![CDATA[前端技术]]></category>
		<category><![CDATA[前端框架]]></category>
		<category><![CDATA[Each 循环]]></category>
		<category><![CDATA[值操作]]></category>
		<category><![CDATA[偏移]]></category>
		<category><![CDATA[复选框选择]]></category>
		<category><![CDATA[操作 HTML 和文本]]></category>
		<category><![CDATA[操作类]]></category>
		<category><![CDATA[直接样式操作]]></category>
		<category><![CDATA[选择器]]></category>
		<guid isPermaLink="false">/?p=3458</guid>

					<description><![CDATA[JQuery第一讲 jQuery简介 jQuery是一个开源的，JavaScript脚本库。 jQuery体系 [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>JQuery第一讲</h1>
<h2>jQuery简介</h2>
<p>
  jQuery是一个开源的，JavaScript脚本库。
</p>
<h2>jQuery体系</h2>
<p><img fetchpriority="high" decoding="async" width="1000" height="206" src="/wp-content/uploads/2018/05/word-image-3059.png" class="wp-image-3460" srcset="/wp-content/uploads/2018/05/word-image-3059.png 1000w, /wp-content/uploads/2018/05/word-image-3059-300x62.png 300w, /wp-content/uploads/2018/05/word-image-3059-768x158.png 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>
<h2>部署jQuery开发环境</h2>
<ol>
<li>
  去网站下载jquery代码
</li>
</ol>
<p><img decoding="async" width="871" height="37" src="/wp-content/uploads/2018/05/word-image-3060.png" class="wp-image-3461" srcset="/wp-content/uploads/2018/05/word-image-3060.png 871w, /wp-content/uploads/2018/05/word-image-3060-300x13.png 300w, /wp-content/uploads/2018/05/word-image-3060-768x33.png 768w" sizes="(max-width: 871px) 100vw, 871px" /></p>
<p>
  脚下留心：从官方网站同一个版本可以下载2个文件，一个是源文件，一个是压缩文件，我们开发的时候使用压缩文件。
</p>
<ol>
<li>
  在页面引入jQuery文件
</li>
</ol>
<p><img decoding="async" width="962" height="95" src="/wp-content/uploads/2018/05/word-image-3061.png" class="wp-image-3462" srcset="/wp-content/uploads/2018/05/word-image-3061.png 962w, /wp-content/uploads/2018/05/word-image-3061-300x30.png 300w, /wp-content/uploads/2018/05/word-image-3061-768x76.png 768w" sizes="(max-width: 962px) 100vw, 962px" /></p>
<h2>jQuery选择器</h2>
<p>
  jQuery中，所有的操作都要转成jQuery对象进行操作。通过$()将元素转成JQuery对象。
</p>
<p>
  $()=jQuery()
</p>
<h3>基本选择器</h3>
<p>
  id选择器、class选择器、标签选择器、组合选择器、后代选择器，子类选择器
</p>
<p>
  &lt;style type=&#8221;text/css&#8221;&gt;
</p>
<p>
  .rose{
</p>
<p>
  	background-color:#11e4e1;
</p>
<p>
  }
</p>
<p>
  .indianred{
</p>
<p>
  	background-color:#cd5d5c;
</p>
<p>
  }
</p>
<p>
  .red{
</p>
<p>
  	color:#F00;
</p>
<p>
  }
</p>
<p>
  &lt;/style&gt;
</p>
<p>
  &lt;!—引入jQuery文件&#8211;&gt;
</p>
<p>
  &lt;script type=&#8221;text/javascript&#8221; src=&#8217;js/jquery-1.11.3.min.js&#8217;&gt;&lt;/script&gt;
</p>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  //但页面加载完成时
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
  	//当按钮点击的时候
</p>
<p>
  	$(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;#first&#8217;).addClass(&#8216;indianred&#8217;);		//id选择器
</p>
<p>
  		//$(&#8216;.second&#8217;).addClass(&#8216;indianred&#8217;);		//class样式
</p>
<p>
  		//$(&#8216;th&#8217;).addClass(&#8216;indianred&#8217;);			//标签选择器
</p>
<p>
  		//$(&#8216;#first,.second&#8217;).addClass(&#8216;rose&#8217;);		//组合选择器
</p>
<p>
  		//$(&#8216;.second td&#8217;).addClass(&#8216;red&#8217;);			//后代选择器
</p>
<p>
  		//$(&#8216;.second&gt;td&#8217;).addClass(&#8216;red&#8217;);			//后代选择器
</p>
<p>
  		//$(&#8216;#first+.second&#8217;).addClass(&#8216;indianred&#8217;);	//紧挨着#first的.second
</p>
<p>
  		$(&#8216;#first~.second&#8217;).addClass(&#8216;indianred&#8217;);	//#first后所有的.second
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;table border=&#8217;1&#8242; bordercolor=&#8217;#000&#8242; align=&#8217;center&#8217; width=&#8217;500&#8242;&gt;
</p>
<p>
  	&lt;tr&gt;
</p>
<p>
  		&lt;th&gt;姓名&lt;/th&gt;
</p>
<p>
  		&lt;th&gt;性别&lt;/th&gt;
</p>
<p>
  		&lt;th&gt;年龄&lt;/th&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr id=&#8217;first&#8217;&gt;
</p>
<p>
  		&lt;td&gt;张三&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;男&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;22&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr class=&#8217;second&#8217;&gt;
</p>
<p>
  		&lt;td&gt;李四&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;男&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;33&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr class=&#8217;second&#8217;&gt;
</p>
<p>
  		&lt;td&gt;王五&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;女&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;20&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
      &lt;tr  class=&#8217;second&#8217;&gt;
</p>
<p>
  		&lt;th colspan=&#8221;3&#8243;&gt;&lt;table width=&#8221;100%&#8221; border=&#8221;1&#8243;&gt;
</p>
<p>
  		  &lt;tr&gt;
</p>
<p>
  		    &lt;td&gt;aa&lt;/td&gt;
</p>
<p>
  		    &lt;td&gt;bb&lt;/td&gt;
</p>
<p>
  		    &lt;td&gt;&amp;nbsp;&lt;/td&gt;
</p>
<p>
  	      &lt;/tr&gt;
</p>
<p>
  	    &lt;/table&gt;&lt;/th&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  &lt;/table&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221;&gt;
</p>
<h3>过滤选择器</h3>
<ol>
<li>
  位置过滤</p>
<ol>
<li>
    :first——第一个元素
  </li>
<li>
    :last——最后一个元素
  </li>
<li>
    :even——第偶数个元素（下标从0开始）
  </li>
<li>
    :odd——第奇数个元素
  </li>
<li>
    :eq(index)——第index元素
  </li>
<li>
    :gt(index)——大于第index的元素
  </li>
<li>
    :lt(index)——小于第index的元素
  </li>
</ol>
</li>
</ol>
<p>
  &lt;style type=&#8221;text/css&#8221;&gt;
</p>
<p>
  .rose{
</p>
<p>
  	background-color:#11e4e1;
</p>
<p>
  }
</p>
<p>
  .indianred{
</p>
<p>
  	background-color:#cd5d5c;
</p>
<p>
  }
</p>
<p>
  .red{
</p>
<p>
  	color:#F00;
</p>
<p>
  }
</p>
<p>
  &lt;/style&gt;
</p>
<p>
  &lt;script type=&#8221;text/javascript&#8221; src=&#8221;js/jquery-1.11.3.min.js&#8221;&gt;&lt;/script&gt;
</p>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
      $(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;tr:first&#8217;).addClass(&#8216;indianred&#8217;);			//第一个tr
</p>
<p>
  		//$(&#8216;tr:last&#8217;).addClass(&#8216;indianred&#8217;);			//最后一个tr
</p>
<p>
  		//$(&#8216;tr:even&#8217;).addClass(&#8220;indianred&#8221;);			//第偶数个元素（下标从0开始)
</p>
<p>
  		//$(&#8216;tr:odd&#8217;).addClass(&#8220;indianred&#8221;);			//第奇数个元素
</p>
<p>
  		//$(&#8216;tr:eq(2)&#8217;).addClass(&#8216;indianred&#8217;);			//第2个元素
</p>
<p>
  		$(&#8216;tr:gt(1)&#8217;).addClass(&#8216;indianred&#8217;);			//大于1的元素
</p>
<p>
  		$(&#8216;tr:lt(1)&#8217;).addClass(&#8216;rose&#8217;);					//小于1的元素
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;table border=&#8217;1&#8242; bordercolor=&#8217;#000&#8242; align=&#8217;center&#8217; width=&#8217;500&#8242;&gt;
</p>
<p>
  	&lt;tr&gt;
</p>
<p>
  		&lt;th&gt;姓名&lt;/th&gt;
</p>
<p>
  		&lt;th&gt;性别&lt;/th&gt;
</p>
<p>
  		&lt;th&gt;年龄&lt;/th&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr id=&#8217;first&#8217;&gt;
</p>
<p>
  		&lt;td&gt;张三&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;男&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;22&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr class=&#8217;second&#8217;&gt;
</p>
<p>
  		&lt;td&gt;李四&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;男&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;33&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  	&lt;tr class=&#8217;second&#8217;&gt;
</p>
<p>
  		&lt;td&gt;王五&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;女&lt;/td&gt;
</p>
<p>
  		&lt;td&gt;20&lt;/td&gt;
</p>
<p>
  	&lt;/tr&gt;
</p>
<p>
  &lt;/table&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221;&gt;
</p>
<ol>
<li>
  内容过滤</p>
<ol>
<li>
    :contains(‘内容’)，包含指定内容的元素
  </li>
<li>
    :has()   包含某个子元素
  </li>
<li>
    : not()		去除某个元素
  </li>
<li>
    :header		匹配所有标题h1~h6
  </li>
<li>
    :empty		匹配所有空元素
  </li>
<li>
    :parent		匹配父节点
  </li>
</ol>
</li>
</ol>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
      $(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;div:contains(&#8220;锄禾&#8221;)&#8217;).addClass(&#8216;indianred&#8217;);		//包含&#8221;锄禾&#8221;的div
</p>
<p>
  		//$(&#8216;div:has(p)&#8217;).addClass(&#8216;indianred&#8217;);				//含有p标记的div
</p>
<p>
  		//$(&#8216;div:has(#first)&#8217;).addClass(&#8216;indianred&#8217;);				//含有#first的div
</p>
<p>
  		//$(&#8216;div:not(.no1)&#8217;).addClass(&#8216;indianred&#8217;);				//去除掉.no1的div
</p>
<p>
  		//$(&#8216;:header&#8217;).addClass(&#8216;indianred&#8217;);						//选中所有的h1~h6
</p>
<p>
  		//$(&#8216;:empty&#8217;).addClass(&#8217;empty&#8217;);							//匹配所有空元素
</p>
<p>
  		$(&#8216;#first:parent&#8217;).addClass(&#8217;empty&#8217;);					//匹配#first的父节点
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;div class=&#8221;first no1&#8243;&gt;&lt;p&gt;锄禾日当午&lt;/p&gt;&lt;/div&gt;
</p>
<p>
  &lt;div class=&#8221;first&#8221;&gt;&lt;p id=&#8221;first&#8221;&gt;汗滴禾下土&lt;/p&gt;&lt;/div&gt;
</p>
<p>
  &lt;h1&gt;一级标题&lt;/h1&gt;
</p>
<p>
  &lt;h2&gt;二级标题&lt;/h2&gt;
</p>
<p>
  &lt;div&gt;&lt;/div&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221; /&gt;
</p>
<ol>
<li>
  子元素过滤选择器</p>
<ol>
<li>
    :first-child——父元素的第一个子元素
  </li>
<li>
    :last-child——父元素的最后一个子元素
  </li>
<li>
    :only-child——父元素只有一个元素的节点
  </li>
<li>
    :nth-child(编号,even,odd)——父元素下的指定编号，偶数，奇数的子元素
  </li>
</ol>
</li>
</ol>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
      $(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;li:first-child&#8217;).addClass(&#8216;indianred&#8217;);		//li父元素的第一个子元素
</p>
<p>
  		//$(&#8216;li:last-child&#8217;).addClass(&#8216;indianred&#8217;);			//li父元素的最后一子元素
</p>
<p>
  		//$(&#8216;li:only-child&#8217;).addClass(&#8216;indianred&#8217;);			//li父元素只有一个元素的节点
</p>
<p>
  		//$(&#8216;li:nth-child(2)&#8217;).addClass(&#8216;indianred&#8217;);			//li父元素下第2个子元素，从1开始
</p>
<p>
  		//$(&#8216;li:nth-child(even)&#8217;).addClass(&#8216;indianred&#8217;);		//li父元素下第偶数个子元素
</p>
<p>
  		$(&#8216;li:nth-child(odd)&#8217;).addClass(&#8216;indianred&#8217;);		//li父元素下第奇数个子元素
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;ul&gt;
</p>
<p>
  	&lt;li&gt;三国演义&lt;/li&gt;
</p>
<p>
      &lt;li&gt;水浒传&lt;/li&gt;
</p>
<p>
      &lt;li&gt;西游记&lt;/li&gt;
</p>
<p>
  &lt;/ul&gt;
</p>
<p>
  &lt;ul&gt;
</p>
<p>
  	&lt;li&gt;钢铁侠&lt;/li&gt;
</p>
<p>
      &lt;li&gt;超人&lt;/li&gt;
</p>
<p>
  &lt;/ul&gt;
</p>
<p>
  &lt;ul&gt;
</p>
<p>
  	&lt;li&gt;大棒子&lt;/li&gt;
</p>
<p>
  &lt;/ul&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221; /&gt;
</p>
<ol>
<li>
  表单过滤选择器</p>
<ol>
<li>
    :input——匹配input, select, textarea，button标签
  </li>
<li>
    :text——匹配文本框
  </li>
<li>
    :password——匹配密码框
  </li>
<li>
    :enabled——可以的元素
  </li>
<li>
    :radio——单选按钮
  </li>
<li>
    :checkbox——复选框
  </li>
<li>
    :checked——选中的元素
  </li>
</ol>
</li>
</ol>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
      $(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;:input&#8217;).addClass(&#8216;indianred&#8217;);		//表示input,select,textarea，button标签
</p>
<p>
  		//$(&#8216;:text&#8217;).addClass(&#8216;indianred&#8217;);			//文本框
</p>
<p>
  		//$(&#8216;:password&#8217;).addClass(&#8216;indianred&#8217;);		//密码框
</p>
<p>
  		//$(&#8216;:enabled&#8217;).addClass(&#8216;indianred&#8217;);		//可用的元素
</p>
<p>
  		//$(&#8216;:radio,:checkbox&#8217;).addClass(&#8216;style1&#8217;);	//单选按钮和复选框
</p>
<p>
  		$(&#8216;:checked&#8217;).addClass(&#8216;style1&#8217;);		//选中的元素
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  姓名：&lt;input type=&#8221;text&#8221; disabled=&#8221;disabled&#8221;/&gt;&lt;br /&gt;
</p>
<p>
  密码：&lt;input type=&#8221;password&#8221; /&gt;&lt;br /&gt;
</p>
<p>
  性别：&lt;input type=&#8221;radio&#8221; name=&#8221;sex&#8221; value=&#8221;男&#8221; checked=&#8221;checked&#8221; /&gt;男
</p>
<p>
  	&lt;input type=&#8221;radio&#8221; name=&#8221;sex&#8221; value=&#8221;女&#8221; /&gt;女&lt;br /&gt;
</p>
<p>
  爱好：&lt;input type=&#8221;checkbox&#8221; value=&#8221;爬山&#8221; checked=&#8221;checked&#8221; /&gt;爬山
</p>
<p>
  	&lt;input type=&#8221;checkbox&#8221; value=&#8221;游泳&#8221; /&gt;游泳 &lt;br /&gt;
</p>
<p>
  籍贯：&lt;select&gt;
</p>
<p>
  		&lt;option&gt;上海&lt;/option&gt;
</p>
<p>
          &lt;option&gt;北京&lt;/option&gt;
</p>
<p>
  &lt;/select&gt;&lt;br /&gt;
</p>
<p>
  意见和建议：&lt;textarea&gt;&lt;/textarea&gt; &lt;br /&gt;
</p>
<p>
  &lt;input type=&#8221;submit&#8221; value=&#8221;提交&#8221; /&gt;
</p>
<p>
  &lt;input type=&#8221;reset&#8221; value=&#8221;重置&#8221; /&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221; /&gt;
</p>
<p>
  &lt;button&gt;这也是按钮&lt;/button&gt;
</p>
<ol>
<li>
  属性过滤选择器</p>
<ol>
<li>
    [属性]：匹配带有指定属性的元素
  </li>
<li>
    [属性=value]：匹配属性=value的元素
  </li>
<li>
    [属性!=value]：匹配属性!=value的元素
  </li>
<li>
    [属性^=value]：匹配属性以value开头的元素
  </li>
<li>
    [属性$=value]：匹配属性以value结尾的元素
  </li>
<li>
    [属性*=value]：匹配属性以包含value的元素
  </li>
<li>
    [属性1=value1][属性2=value2]：同时具有属性1和属性2的元素
  </li>
</ol>
</li>
</ol>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
      $(&#8216;#btn&#8217;).click(function(e) {
</p>
<p>
          //$(&#8216;:text[class]&#8217;).addClass(&#8216;indianred&#8217;);	//带有class属性的文本框元素
</p>
<p>
  		//$(&#8216;[class]&#8217;).addClass(&#8216;indianred&#8217;);			//带有class属性的所有元素
</p>
<p>
  		//$(&#8216;:text[name=firstname]&#8217;).addClass(&#8216;indianred&#8217;);	//name=firstname的文本框元素
</p>
<p>
  		//$(&#8216;:text[name!=firstname]&#8217;).addClass(&#8216;indianred&#8217;);	//name!=firstname的文本框元素
</p>
<p>
  		//$(&#8216;:text[name^=first]&#8217;).addClass(&#8216;indianred&#8217;);		//name属性的值以first开头的元素
</p>
<p>
  		//$(&#8216;:text[name$=name]&#8217;).addClass(&#8216;indianred&#8217;);		//name属性的值以name结尾的元素
</p>
<p>
  		//$(&#8216;:text[name*=stna]&#8217;).addClass(&#8216;indianred&#8217;);		//name属性中带有stna的元素
</p>
<p>
  		$(&#8216;:text[name$=name][class]&#8217;).addClass(&#8216;indianred&#8217;);//name属性的值以name结尾的元素，同时带有class属性
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;input type=&#8221;text&#8221; name=&#8221;firstname&#8221; value=&#8221;张&#8221; class=&#8217;stu&#8217;  /&gt; &lt;br /&gt;
</p>
<p>
  &lt;input type=&#8221;text&#8221; name=&#8221;middlename&#8221; value=&#8221;三&#8221; /&gt;&lt;br /&gt;
</p>
<p>
  &lt;input type=&#8221;text&#8221; name=&#8221;lastname&#8221; value=&#8221;峰&#8221; /&gt;&lt;br /&gt;
</p>
<p>
  &lt;input type=&#8221;text&#8221; name=&#8221;firstcity&#8221; value=&#8221;上海&#8221; class /&gt;&lt;br /&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;点击&#8221; id=&#8221;btn&#8221; /&gt;
</p>
<p>
  &lt;div class=&#8221;&#8221;&gt;锄禾日当午&lt;/div&gt;
</p>
<h2>操作属性</h2>
<ol>
<li>
  jQuery对象.attr(属性)：获取对象的属性值，只获取第一个元素
</li>
<li>
  jQuery对象.attr(属性,值)：将值付给所有的jQuery对象
</li>
<li>
  jQuery对象.attr(属性,function(){});	//将函数的返回值付给属性
</li>
<li>
  jQuery对象.attr({属性:属性值,属性:属性值})
</li>
<li>
  jQuery对象.removeAttr(属性名)
</li>
</ol>
<p><img loading="lazy" decoding="async" width="1058" height="386" src="/wp-content/uploads/2018/05/word-image-3062.png" class="wp-image-3463" srcset="/wp-content/uploads/2018/05/word-image-3062.png 1058w, /wp-content/uploads/2018/05/word-image-3062-300x109.png 300w, /wp-content/uploads/2018/05/word-image-3062-768x280.png 768w, /wp-content/uploads/2018/05/word-image-3062-1024x374.png 1024w" sizes="(max-width: 1058px) 100vw, 1058px" /></p>
<h2>操作类</h2>
<ol>
<li>
  addClass(类名)——添加类
</li>
<li>
  removeClass(类名)——删除类
</li>
<li>
  toggleClass(类名)——交替
</li>
</ol>
<p><img loading="lazy" decoding="async" width="779" height="379" src="/wp-content/uploads/2018/05/word-image-3063.png" class="wp-image-3464" srcset="/wp-content/uploads/2018/05/word-image-3063.png 779w, /wp-content/uploads/2018/05/word-image-3063-300x146.png 300w, /wp-content/uploads/2018/05/word-image-3063-768x374.png 768w" sizes="(max-width: 779px) 100vw, 779px" /></p>
<h2>直接样式操作</h2>
<ol>
<li>
  css(name)：获取样式的值
</li>
<li>
  css(name,value)：给样式赋值
</li>
<li>
  css({样式:值，样式:值})
</li>
</ol>
<p><img loading="lazy" decoding="async" width="808" height="228" src="/wp-content/uploads/2018/05/word-image-3064.png" class="wp-image-3465" srcset="/wp-content/uploads/2018/05/word-image-3064.png 808w, /wp-content/uploads/2018/05/word-image-3064-300x85.png 300w, /wp-content/uploads/2018/05/word-image-3064-768x217.png 768w" sizes="(max-width: 808px) 100vw, 808px" /></p>
<h2>offset()：偏移</h2>
<p>
  坐标原点是浏览器客户端的左上角
</p>
<p><img loading="lazy" decoding="async" width="892" height="344" src="/wp-content/uploads/2018/05/word-image-3065.png" class="wp-image-3466" srcset="/wp-content/uploads/2018/05/word-image-3065.png 892w, /wp-content/uploads/2018/05/word-image-3065-300x116.png 300w, /wp-content/uploads/2018/05/word-image-3065-768x296.png 768w" sizes="(max-width: 892px) 100vw, 892px" /></p>
<p>
  注意：
</p>
<p><img loading="lazy" decoding="async" width="574" height="179" src="/wp-content/uploads/2018/05/word-image-3066.png" class="wp-image-3467" srcset="/wp-content/uploads/2018/05/word-image-3066.png 574w, /wp-content/uploads/2018/05/word-image-3066-300x94.png 300w" sizes="(max-width: 574px) 100vw, 574px" /></p>
<h2>宽度、高度操作</h2>
<ol>
<li>
  width()：获取宽度
</li>
<li>
  width(value)：设置宽度
</li>
<li>
  height()：获取高度
</li>
<li>
  height(value)：设置高度
</li>
</ol>
<p><img loading="lazy" decoding="async" width="1019" height="397" src="/wp-content/uploads/2018/05/word-image-3067.png" class="wp-image-3468" srcset="/wp-content/uploads/2018/05/word-image-3067.png 1019w, /wp-content/uploads/2018/05/word-image-3067-300x117.png 300w, /wp-content/uploads/2018/05/word-image-3067-768x299.png 768w" sizes="(max-width: 1019px) 100vw, 1019px" /></p>
<h2>操作HTML和文本</h2>
<ol>
<li>
  html()：获取HTML代码
</li>
<li>
  html(value)：将value作为HTML付给元素
</li>
<li>
  text()：获取文本
</li>
<li>
  text(value)：将value的值作为文本付给元素
</li>
</ol>
<p><img loading="lazy" decoding="async" width="759" height="227" src="/wp-content/uploads/2018/05/word-image-3068.png" class="wp-image-3469" srcset="/wp-content/uploads/2018/05/word-image-3068.png 759w, /wp-content/uploads/2018/05/word-image-3068-300x90.png 300w" sizes="(max-width: 759px) 100vw, 759px" /></p>
<h2>值操作</h2>
<ol>
<li>
  val()：获取值
</li>
<li>
  val(value)：给value属性赋值
</li>
</ol>
<p><img loading="lazy" decoding="async" width="628" height="190" src="/wp-content/uploads/2018/05/word-image-3069.png" class="wp-image-3470" srcset="/wp-content/uploads/2018/05/word-image-3069.png 628w, /wp-content/uploads/2018/05/word-image-3069-300x91.png 300w" sizes="(max-width: 628px) 100vw, 628px" /></p>
<h2>each循环</h2>
<p>
  方法一：$.each(数组/对象，回调函数)
</p>
<p>
  方法二：jQuery元素.each(回调函数)
</p>
<p><img loading="lazy" decoding="async" width="798" height="226" src="/wp-content/uploads/2018/05/word-image-3070.png" class="wp-image-3471" srcset="/wp-content/uploads/2018/05/word-image-3070.png 798w, /wp-content/uploads/2018/05/word-image-3070-300x85.png 300w, /wp-content/uploads/2018/05/word-image-3070-768x218.png 768w" sizes="(max-width: 798px) 100vw, 798px" /></p>
<h2>例题（复选框选择）</h2>
<p>
  &lt;script type=&#8221;text/javascript&#8221; src=&#8221;js/jquery-1.8.3.min.js&#8221;&gt;&lt;/script&gt;
</p>
<p>
  &lt;script type=&#8221;text/javascript&#8221;&gt;
</p>
<p>
  $(document).ready(function(e) {
</p>
<p>
  	//全选
</p>
<p>
      $(&#8216;:button:first&#8217;).click(function(e) {
</p>
<p>
          $(&#8216;:checkbox&#8217;).attr(&#8216;checked&#8217;,&#8217;checked&#8217;);
</p>
<p>
      });
</p>
<p>
  	//反选
</p>
<p>
  	$(&#8216;:button:eq(1)&#8217;).click(function(e) {
</p>
<p>
          $(&#8216;:checkbox&#8217;).each(function(index, element) {
</p>
<p>
             	$(this).attr(&#8216;checked&#8217;,!$(this).attr(&#8216;checked&#8217;));
</p>
<p>
          });
</p>
<p>
      });
</p>
<p>
  	//取消全选
</p>
<p>
  	$(&#8216;:button:last&#8217;).click(function(e) {
</p>
<p>
          $(&#8216;:checkbox&#8217;).removeAttr(&#8216;checked&#8217;);
</p>
<p>
      });
</p>
<p>
  });
</p>
<p>
  &lt;/script&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;全选&#8221; /&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;反选&#8221; /&gt;
</p>
<p>
  &lt;input type=&#8221;button&#8221; value=&#8221;取消全选&#8221; /&gt;
</p>
<p>
  &lt;form&gt;
</p>
<p>
  	&lt;input type=&#8221;checkbox&#8221; value=&#8221;读书&#8221; name=&#8221;hobby&#8221; /&gt;读书&lt;br /&gt;
</p>
<p>
      &lt;input type=&#8221;checkbox&#8221; value=&#8221;游泳&#8221; name=&#8221;hobby&#8221;/&gt;游泳&lt;br /&gt;
</p>
<p>
      &lt;input type=&#8221;checkbox&#8221; value=&#8221;看报&#8221; name=&#8221;hobby&#8221;/&gt;看报&lt;br /&gt;
</p>
<p>
  &lt;/form&gt;
</p>
<p>
  脚下留心：jQuery版本不同，有少部分方法也会有差异。
</p>
<p>
  多学一招：通过val()实现选中功能
</p>
<p><img loading="lazy" decoding="async" width="751" height="366" src="/wp-content/uploads/2018/05/word-image-3071.png" class="wp-image-3472" srcset="/wp-content/uploads/2018/05/word-image-3071.png 751w, /wp-content/uploads/2018/05/word-image-3071-300x146.png 300w" sizes="(max-width: 751px) 100vw, 751px" /></p>
<ol>
<li>
  能够在html代码中引入jQuery库
</li>
<li>
  能够理解选择器的作用
</li>
<li>
  能够说出或使用多种选择器
</li>
<li>
  能够组合使用选择器
</li>
<li>
  能够使用jQuery操作html属性
</li>
<li>
  能够使用jQuery操作css属性
</li>
<li>
  能够熟练使用jQuery()的页面载入事件ready()
</li>
<li>
  能够理解each()的作用
</li>
<li>
  能够使用each()方法遍历jQuery对象
</li>
<li>
  能够解释dom对象和jQuery对象的区别
</li>
<li>
  能够将dom对象和jQuery对象相互转换
</li>
<li>
  能够使用bind()方法绑定事件
</li>
<li>
  能够熟练使用jQuery的常规事件绑定语法
</li>
<li>
  能够使用事件切换方法hover(),toggle()
</li>
<li>
  能够使用jQuery的基本特效方法 show(),hide(),toggle()
</li>
<li>
  能够使用jQuery的滑动特效方法 slideDown(),slideUp(),slideToggle()
</li>
<li>
  能够使用jQuery的淡入淡出特效方法
</li>
<li>
  能够将内容插入到元素内部或外部
</li>
<li>
  能够清空元素内容或删除元素本身
</li>
<li>
  能够使用replaceWith()替换元素
</li>
<li>
  能够复制指定元素
</li>
<li>
  能够把内容从外面包裹上新元素
</li>
<li>
  能够使用元素查找或匹配的多个方法
</li>
<li>
  能够理解jQuery中插件的作用
</li>
<li>
  能够制作自定义插件
</li>
<li>
  能够使用jQuery实现ajax的get请求
</li>
<li>
  能够使用jQuery实现ajax的post请求
</li>
</ol>
]]></content:encoded>
					
					<wfw:commentRss>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/3458.html/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>CSS（一）CSS、 伪类、 进制、 选择器、 颜色</title>
		<link>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/193.html</link>
					<comments>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/193.html#respond</comments>
		
		<dc:creator><![CDATA[Mr.Lee]]></dc:creator>
		<pubDate>Thu, 17 May 2018 14:03:14 +0000</pubDate>
				<category><![CDATA[CSS]]></category>
		<category><![CDATA[前端技术]]></category>
		<category><![CDATA[伪类]]></category>
		<category><![CDATA[进制]]></category>
		<category><![CDATA[选择器]]></category>
		<category><![CDATA[颜色]]></category>
		<guid isPermaLink="false">/?p=193</guid>

					<description><![CDATA[回顾 标签通用属性 id：标签唯一的编号 class：标签属于的类别 width：宽度 height：高度 n [&#8230;]]]></description>
										<content:encoded><![CDATA[<h2>回顾</h2>
<ol>
<li>标签通用属性
<ol>
<li>id：标签唯一的编号</li>
<li>class：标签属于的类别</li>
<li>width：宽度 height：高度</li>
<li>name：元素的名字</li>
</ol>
</li>
<li>表单域：&lt;form&gt;</li>
<li>表单元素
<ol>
<li>文本框：&lt;input type=’text’ name=’’ size=’’ maxlengh=’’/&gt;</li>
<li>密码框：&lt;input type=’password’ name=’’/&gt;</li>
<li>单选按钮：&lt;input type=radio&gt;
<ol>
<li>同一组的单选按钮的名字要一致</li>
<li>要给无法输入的表单元素赋值</li>
</ol>
</li>
<li>复选按钮：&lt;input type=’checkbox’&gt;</li>
<li>下拉菜单：&lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;</li>
<li>下拉列表：&lt;select size=’’ multiple&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;</li>
<li>文本域：&lt;textarea cols=’’ rows=’’&gt;&lt;/textarea&gt;</li>
<li>提交按钮：&lt;input type=’submit’ name=’’/&gt;</li>
<li>重置按钮：&lt;input type=’reset’ name=’’/&gt;</li>
<li>普通按钮：&lt;input type=’button’/&gt;</li>
</ol>
</li>
<li>使用表单
<ol>
<li>action属性：表单提交的位置，如果action=’’表示表单提交给自己</li>
<li>method属性：值有get和post</li>
</ol>
</li>
<li>框架
<ol>
<li>&lt;frameset&gt;框架集</li>
<li>&lt;frame&gt;框架</li>
</ol>
</li>
</ol>
<p>练习一：写入如下的框架结构</p>
<p><img loading="lazy" decoding="async" width="208" height="87" class="wp-image-196" src="/wp-content/uploads/2018/05/word-image-170.png" /></p>
<p>&lt;html&gt;</p>
<p>&lt;frameset cols=&#8221;100,*&#8221;&gt;</p>
<p>&lt;frame src=&#8221;&#8221;&gt;</p>
<p>&lt;frameset rows=&#8221;100,*&#8221;&gt;</p>
<p>&lt;frame src=&#8221;&#8221;&gt;</p>
<p>&lt;frame src=&#8221;&#8221;&gt;</p>
<p>&lt;/frameset&gt;</p>
<p>&lt;/frameset&gt;</p>
<p>&lt;/html&gt;</p>
<p>练习二：写出如下框架</p>
<p><img loading="lazy" decoding="async" width="218" height="75" class="wp-image-197" src="/wp-content/uploads/2018/05/word-image-171.png" /></p>
<p>&lt;html&gt;</p>
<p>&lt;frameset rows=&#8221;*,*&#8221;&gt;</p>
<p>&lt;frameset cols=&#8221;*,*&#8221;&gt;</p>
<p>&lt;frame src=&#8221;&#8221;/&gt;</p>
<p>&lt;frame src=&#8221;/&gt;&#8221;</p>
<p>&lt;/frameset&gt;</p>
<p>&lt;frameset cols=&#8221;*,*&#8221;&gt;</p>
<p>&lt;frame src=&#8221;&#8221;/&gt;</p>
<p>&lt;frame src=&#8221;&#8221;/&gt;</p>
<p>&lt;/frameset&gt;</p>
<p>&lt;/frameset&gt;</p>
<p>&lt;/html&gt;</p>
<ol>
<li>内嵌框架：&lt;iframe&gt;，嵌套在页面内部</li>
<li>HTML5新特点
<ol>
<li>语法更加简单</li>
<li>语法更加宽松</li>
<li>标签语义化</li>
</ol>
</li>
<li>HTML5新增常用属性
<ol>
<li>required：必填</li>
<li>placeholder：默认显示内容</li>
<li>autofocus：自动获取焦点</li>
</ol>
</li>
<li>input标签新增type属性
<ol>
<li>type=&#8221;email&#8221;</li>
<li>type=&#8221;date&#8221;</li>
<li>type=&#8221;time&#8221;</li>
<li>type=&#8221;month&#8221;</li>
<li>type=&#8221;week&#8221;</li>
<li>type=&#8221;number&#8221;</li>
<li>type=&#8221;range&#8221;</li>
<li>type=&#8221;color&#8221;</li>
</ol>
</li>
<li>多媒体标签
<ol>
<li>&lt;embed&gt;：可以播放音频和视频</li>
<li>&lt;audio&gt;
<ol>
<li>方法一</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>&lt;audio src=&#8221;music/music.mp3&#8243; controls autoplay=&#8221;autoplay&#8221;&gt;&lt;/audio&gt;</p>
<ul>
<li>
<ul>
<li>
<ol>
<li>方法二：</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>&lt;audio controls autoplay&gt;</p>
<p>&lt;source src=&#8221;music/music.mp3&#8243;&gt;</p>
<p>&lt;source src=&#8221;music/music.ogg&#8221;&gt;</p>
<p>&lt;/audio&gt;</p>
<ul>
<li>
<ol>
<li>&lt;video&gt;</li>
</ol>
</li>
</ul>
<h2>多学两招</h2>
<h3>optgroup</h3>
<p><img loading="lazy" decoding="async" width="568" height="187" class="wp-image-198" src="/wp-content/uploads/2018/05/word-image-172.png" srcset="/wp-content/uploads/2018/05/word-image-172.png 568w, /wp-content/uploads/2018/05/word-image-172-300x99.png 300w" sizes="(max-width: 568px) 100vw, 568px" /></p>
<h3>HTML5中表单元素可以不放在表单中</h3>
<p>HTML5中表单元素可以不放在表单中，通过id属性将他们关联起来</p>
<p><img loading="lazy" decoding="async" width="896" height="100" class="wp-image-199" src="/wp-content/uploads/2018/05/word-image-173.png" srcset="/wp-content/uploads/2018/05/word-image-173.png 896w, /wp-content/uploads/2018/05/word-image-173-300x33.png 300w, /wp-content/uploads/2018/05/word-image-173-768x86.png 768w" sizes="(max-width: 896px) 100vw, 896px" /></p>
<h2>计算机的单位，进制与进制间的转换</h2>
<h3>计算机的单位</h3>
<ol>
<li>计算机中的电子器件，电子器件只有两个状态，通电与不通电，通就是1，不通就是0。所以计算机内部只能传输0和1。</li>
<li>既然只能传输0和1，计算机用的是二进制。</li>
<li>一个字节的大小可以一个字符，一个字节=8位</li>
</ol>
<p><img loading="lazy" decoding="async" width="356" height="176" class="wp-image-200" src="/wp-content/uploads/2018/05/word-image-174.png" srcset="/wp-content/uploads/2018/05/word-image-174.png 356w, /wp-content/uploads/2018/05/word-image-174-300x148.png 300w" sizes="(max-width: 356px) 100vw, 356px" /></p>
<ol>
<li>计算机最小的单位是“位”，一个位就是一根线传输的数据</li>
</ol>
<p><img loading="lazy" decoding="async" width="569" height="326" class="wp-image-201" src="/wp-content/uploads/2018/05/word-image-175.png" srcset="/wp-content/uploads/2018/05/word-image-175.png 569w, /wp-content/uploads/2018/05/word-image-175-300x172.png 300w" sizes="(max-width: 569px) 100vw, 569px" /></p>
<p>1K=1024（2<sup>10</sup>）个字节</p>
<p>1M=1024K，2<sup>20</sup>个字节</p>
<p>1G=1024M，2<sup>30</sup>个字节</p>
<p>1T=1024G，2<sup>40</sup>个字节</p>
<h3>进制</h3>
<p>我们原来学习的是十进制，逢十进一，十进制中有十个数字。我们以此类推，二进制就是逢二进一，二进制就两个数字，0和1。</p>
<p>在计算机中，我们需要用到的进制有，二进制，八进制，十进制，十六进制。</p>
<table>
<tbody>
<tr>
<td>进制</td>
<td>包含数字</td>
</tr>
<tr>
<td>二进制</td>
<td>0,1</td>
</tr>
<tr>
<td>八进制</td>
<td>0,1,2,3,4,5,6,7</td>
</tr>
<tr>
<td>十进制</td>
<td>0,1,2,3,4,5,6,7,8,9</td>
</tr>
<tr>
<td>十六进制</td>
<td>0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F</td>
</tr>
</tbody>
</table>
<p>（1+1）<sub>2</sub>=（10）<sub>2</sub></p>
<p>（7+6）<sub>8</sub>=（15）<sub>8</sub></p>
<p>（A+6+B）<sub>16</sub>=（1B）<sub>16</sub></p>
<h3>进制转换（将其他进制转成10进制）</h3>
<p>分析：以十进制为例，以10为底，指数从右往左以此为0次方，1次方，2次方…</p>
<p>(123)<sub>10</sub>=1*10<sup>2</sup>+2*10<sup>1</sup>+3*10<sup>0</sup></p>
<p>（3456）<sub>10</sub>=3*10<sup>3</sup>+4*10<sup>2</sup>+5*10<sup>1</sup>+6*10<sup>0</sup></p>
<p>以此类推</p>
<p>(1100)<sub>2</sub>=1*2<sup>3</sup>+1*2<sup>2</sup>+0*2<sup>1</sup>+0*2<sup>0=</sup>12</p>
<p>(1011)<sub>2</sub>=1*2<sup>3</sup>+0*2<sup>2</sup>+1*2<sup>1</sup>+1*2<sup>0</sup>=11</p>
<p>(763)<sub>8</sub>=7*8<sup>2</sup>+6*8<sup>1</sup>+3*8<sup>0</sup></p>
<p>(FF)<sub>16</sub>=15*16<sup>1</sup>+15*16<sup>0</sup>=255</p>
<p>(2B)<sub>16</sub>=2*16<sup>1</sup>+11*16<sup>0</sup>=43</p>
<h3>进制转换（十进制转成二进制）</h3>
<p>整数方法：除2反向取余数，小数部分是乘2正向取整数</p>
<p>(11)<sub>10</sub>=(1011)<sub>2</sub></p>
<p><img loading="lazy" decoding="async" width="410" height="221" class="wp-image-202" src="/wp-content/uploads/2018/05/word-image-176.png" srcset="/wp-content/uploads/2018/05/word-image-176.png 410w, /wp-content/uploads/2018/05/word-image-176-300x162.png 300w" sizes="(max-width: 410px) 100vw, 410px" /></p>
<p>(19)<sub>10</sub>=(10011)<sub>2</sub></p>
<p><img loading="lazy" decoding="async" width="364" height="285" class="wp-image-203" src="/wp-content/uploads/2018/05/word-image-177.png" srcset="/wp-content/uploads/2018/05/word-image-177.png 364w, /wp-content/uploads/2018/05/word-image-177-300x235.png 300w" sizes="(max-width: 364px) 100vw, 364px" /></p>
<p>多学一招：八进制和十六进制转成二进制和十进制转换不一样，八进制是将每一八进制位数字转成3位的2进制，16进制是将每一位数字转成4位的二进制数字，然后合并起来</p>
<p>(13)<sub>8</sub>=(1011)<sub>2</sub></p>
<p>分析：</p>
<p>1的3位二进制是001</p>
<p>3的3位二进制是011</p>
<p>(13)<sub>16</sub>=(10011)<sub>2</sub></p>
<p>分析：1的4位二进制0001</p>
<p>3的4位二进制是0011</p>
<p>(0.25)<sub>10</sub>=(0.01)<sub>2</sub></p>
<p><img loading="lazy" decoding="async" width="310" height="225" class="wp-image-204" src="/wp-content/uploads/2018/05/word-image-178.png" srcset="/wp-content/uploads/2018/05/word-image-178.png 310w, /wp-content/uploads/2018/05/word-image-178-300x218.png 300w" sizes="(max-width: 310px) 100vw, 310px" /></p>
<p>重点：十进制和二进制的整数部分的转换。</p>
<h2>网页中颜色表示的含义</h2>
<ol>
<li>光的三原色（RGB），red green blue，他们的取值范围是0-255，转成十六进制00-FF。</li>
<li>颜色的色值以#开头</li>
<li>例题
<ol>
<li>#FF0000：红色</li>
<li>#00FF00：绿色</li>
<li>#006600：绿色</li>
<li>#0000FF：蓝色</li>
<li>#000000：黑色</li>
<li>#FFFFFF：白色</li>
<li>#555555：灰色</li>
<li>#5c5c5c：灰色</li>
<li>#112233：由11的红，22的绿，33的蓝组成的颜色</li>
</ol>
</li>
</ol>
<h2>DW设计器的使用</h2>
<h3>插入图片</h3>
<p>方法一：</p>
<p><img loading="lazy" decoding="async" width="627" height="95" class="wp-image-205" src="/wp-content/uploads/2018/05/word-image-179.png" srcset="/wp-content/uploads/2018/05/word-image-179.png 627w, /wp-content/uploads/2018/05/word-image-179-300x45.png 300w" sizes="(max-width: 627px) 100vw, 627px" /></p>
<p>方法二：</p>
<p><img loading="lazy" decoding="async" width="813" height="185" class="wp-image-206" src="/wp-content/uploads/2018/05/word-image-180.png" srcset="/wp-content/uploads/2018/05/word-image-180.png 813w, /wp-content/uploads/2018/05/word-image-180-300x68.png 300w, /wp-content/uploads/2018/05/word-image-180-768x175.png 768w" sizes="(max-width: 813px) 100vw, 813px" /></p>
<h3>插入换行</h3>
<p>回车：换段</p>
<p>shift+回车：换行</p>
<h3>添加超链接</h3>
<p>第一步：选中文本或图片</p>
<p><img loading="lazy" decoding="async" width="225" height="85" class="wp-image-207" src="/wp-content/uploads/2018/05/word-image-181.png" /></p>
<p>第二步：在属性面板上</p>
<p><img loading="lazy" decoding="async" width="783" height="106" class="wp-image-208" src="/wp-content/uploads/2018/05/word-image-182.png" srcset="/wp-content/uploads/2018/05/word-image-182.png 783w, /wp-content/uploads/2018/05/word-image-182-300x41.png 300w, /wp-content/uploads/2018/05/word-image-182-768x104.png 768w" sizes="(max-width: 783px) 100vw, 783px" /></p>
<h3>插入表格</h3>
<p><img loading="lazy" decoding="async" width="578" height="54" class="wp-image-209" src="/wp-content/uploads/2018/05/word-image-183.png" srcset="/wp-content/uploads/2018/05/word-image-183.png 578w, /wp-content/uploads/2018/05/word-image-183-300x28.png 300w" sizes="(max-width: 578px) 100vw, 578px" /></p>
<p>脚下留心：表格是可以嵌套的。</p>
<h3>合并单元格</h3>
<p><img loading="lazy" decoding="async" width="622" height="49" class="wp-image-210" src="/wp-content/uploads/2018/05/word-image-184.png" srcset="/wp-content/uploads/2018/05/word-image-184.png 622w, /wp-content/uploads/2018/05/word-image-184-300x24.png 300w" sizes="(max-width: 622px) 100vw, 622px" /></p>
<p>选中需要合并的单元格，点击“合并”按钮即可</p>
<p>选中需要拆分的单元格，点击“拆分”按钮即可。</p>
<h3>标签选择器的使用</h3>
<p><img loading="lazy" decoding="async" width="626" height="61" class="wp-image-211" src="/wp-content/uploads/2018/05/word-image-185.png" srcset="/wp-content/uploads/2018/05/word-image-185.png 626w, /wp-content/uploads/2018/05/word-image-185-300x29.png 300w" sizes="(max-width: 626px) 100vw, 626px" /></p>
<p>此工具用来选择标签内容非常方便。</p>
<h2>CSS介绍</h2>
<ol>
<li>我们在做网站的时候有一个原则：表现（样式）和内容要分离。表现是由CSS控制的，内容是由HTML控制器的。</li>
<li>CSS是Cascading Style Sheet(层叠样式表)的缩写。是用于控制网页样式并允许将样式信息与网页内容分离的一种标记性语言。</li>
</ol>
<p><img loading="lazy" decoding="async" width="560" height="52" class="wp-image-212" src="/wp-content/uploads/2018/05/word-image-186.png" srcset="/wp-content/uploads/2018/05/word-image-186.png 560w, /wp-content/uploads/2018/05/word-image-186-300x28.png 300w" sizes="(max-width: 560px) 100vw, 560px" /></p>
<h2>语法</h2>
<p>CSS以&lt;style&gt;开头，&lt;/style&gt;结束，建议样式代码写在&lt;head&gt;&lt;/head&gt;之间。</p>
<p>语法结构：</p>
<p>&lt;style type=&#8221;text/css&#8221;&gt;</p>
<p>选择器{</p>
<p>属性:属性的值;</p>
<p>属性:属性的值;</p>
<p>}</p>
<p>&lt;/style&gt;</p>
<p>CSS样式由选择器、属性、属性的值组成。</p>
<h2>注释</h2>
<p>语法：/* 注释的内容 */</p>
<h2>两个排版标签</h2>
<p>&lt;div&gt;&lt;/div&gt;</p>
<p>&lt;span&gt;&lt;/span&gt;</p>
<p>这两个标签叫块标记，这两个标记中用来放内容。他们的区别：</p>
<ol>
<li>一般来说，&lt;div&gt;中可以放图片，文字，视频等网页内容，&lt;span&gt;一般只能存放文字。</li>
<li>显示方式不一样</li>
</ol>
<p><img loading="lazy" decoding="async" width="480" height="79" class="wp-image-213" src="/wp-content/uploads/2018/05/word-image-187.png" srcset="/wp-content/uploads/2018/05/word-image-187.png 480w, /wp-content/uploads/2018/05/word-image-187-300x49.png 300w" sizes="(max-width: 480px) 100vw, 480px" /></p>
<h2>CSS选择器（符）</h2>
<h3>ID选择器</h3>
<ol>
<li>id选择器以#开头</li>
<li>id选择器只能供一个元素使用</li>
</ol>
<p><img loading="lazy" decoding="async" width="510" height="171" class="wp-image-214" src="/wp-content/uploads/2018/05/word-image-188.png" srcset="/wp-content/uploads/2018/05/word-image-188.png 510w, /wp-content/uploads/2018/05/word-image-188-300x101.png 300w" sizes="(max-width: 510px) 100vw, 510px" /></p>
<h3>类样式（class样式）</h3>
<ol>
<li>以点（.）开头</li>
<li>可以供多个元素使用</li>
</ol>
<p><img loading="lazy" decoding="async" width="592" height="180" class="wp-image-215" src="/wp-content/uploads/2018/05/word-image-189.png" srcset="/wp-content/uploads/2018/05/word-image-189.png 592w, /wp-content/uploads/2018/05/word-image-189-300x91.png 300w" sizes="(max-width: 592px) 100vw, 592px" /></p>
<h3>标签选择器</h3>
<p>通过标签来选择元素</p>
<p><img loading="lazy" decoding="async" width="400" height="191" class="wp-image-216" src="/wp-content/uploads/2018/05/word-image-190.png" srcset="/wp-content/uploads/2018/05/word-image-190.png 400w, /wp-content/uploads/2018/05/word-image-190-300x143.png 300w" sizes="(max-width: 400px) 100vw, 400px" /></p>
<h3>通配选择器</h3>
<p>通过星号（*）来表示所有标签，对所有标签添加样式</p>
<p><img loading="lazy" decoding="async" width="477" height="186" class="wp-image-217" src="/wp-content/uploads/2018/05/word-image-191.png" srcset="/wp-content/uploads/2018/05/word-image-191.png 477w, /wp-content/uploads/2018/05/word-image-191-300x117.png 300w" sizes="(max-width: 477px) 100vw, 477px" /></p>
<h3>组合选择器</h3>
<p>如果有多个选择器的样式是一样的，我们可以将这些选择器组合起来一起写。</p>
<p>&lt;style type=&#8221;text/css&#8221;&gt;</p>
<p>/*组合选择器*/</p>
<p>div,span{</p>
<p>color:#F00;</p>
<p>}</p>
<p>#first,h1{</p>
<p>color:#060;</p>
<p>}</p>
<p>&lt;/style&gt;</p>
<p>&lt;div&gt;锄禾日当午，&lt;/div&gt;</p>
<p>&lt;p id=&#8221;first&#8221;&gt;汗滴禾下土。&lt;/p&gt;</p>
<p>&lt;span&gt;谁知盘中餐，&lt;/span&gt;</p>
<p>&lt;h1&gt;粒粒皆辛苦。&lt;/h1&gt;</p>
<p><img loading="lazy" decoding="async" width="491" height="152" class="wp-image-218" src="/wp-content/uploads/2018/05/word-image-192.png" srcset="/wp-content/uploads/2018/05/word-image-192.png 491w, /wp-content/uploads/2018/05/word-image-192-300x93.png 300w" sizes="(max-width: 491px) 100vw, 491px" /></p>
<h3>后代选择器</h3>
<p><img loading="lazy" decoding="async" width="791" height="238" class="wp-image-219" src="/wp-content/uploads/2018/05/word-image-193.png" srcset="/wp-content/uploads/2018/05/word-image-193.png 791w, /wp-content/uploads/2018/05/word-image-193-300x90.png 300w, /wp-content/uploads/2018/05/word-image-193-768x231.png 768w" sizes="(max-width: 791px) 100vw, 791px" /></p>
<h3>子元素选择器（父元素&gt;子元素）</h3>
<p><img loading="lazy" decoding="async" width="794" height="230" class="wp-image-220" src="/wp-content/uploads/2018/05/word-image-194.png" srcset="/wp-content/uploads/2018/05/word-image-194.png 794w, /wp-content/uploads/2018/05/word-image-194-300x87.png 300w, /wp-content/uploads/2018/05/word-image-194-768x222.png 768w" sizes="(max-width: 794px) 100vw, 794px" /></p>
<h3>相邻元素选择器</h3>
<p>#first+div：紧挨着#first之后的div</p>
<p><img loading="lazy" decoding="async" width="656" height="173" class="wp-image-221" src="/wp-content/uploads/2018/05/word-image-195.png" srcset="/wp-content/uploads/2018/05/word-image-195.png 656w, /wp-content/uploads/2018/05/word-image-195-300x79.png 300w" sizes="(max-width: 656px) 100vw, 656px" /></p>
<p>#first~div：#first之后的所有的div</p>
<p><img loading="lazy" decoding="async" width="661" height="181" class="wp-image-222" src="/wp-content/uploads/2018/05/word-image-196.png" srcset="/wp-content/uploads/2018/05/word-image-196.png 661w, /wp-content/uploads/2018/05/word-image-196-300x82.png 300w" sizes="(max-width: 661px) 100vw, 661px" /></p>
<h3>伪类</h3>
<p>元素:link 正常连接时候的状态</p>
<p>元素:visited 点击以后的状态</p>
<p>元素:hover 当鼠标移动上去的状态</p>
<p>元素:active 当鼠标按下去时候的状态</p>
<p>脚下留心：不是所有的元素都支持这4个状态，有的元素可能只支持其中的某个状态。但是超链接支持这4种状态。</p>
<p>脚下留心：这四种状态要按照lvha的顺序写。（love 爱 hate 恨）</p>
<p>&lt;style type=&#8221;text/css&#8221;&gt;</p>
<p>a:link{ /*正常连接时候的状态*/</p>
<p>color:#F00;</p>
<p>text-decoration:none; /*文本修饰*/</p>
<p>font-size:12px;</p>
<p>}</p>
<p>a:visited{ /*点击后的状态*/</p>
<p>color:#F0F;</p>
<p>text-decoration:none;</p>
<p>font-size:12px;</p>
<p>}</p>
<p>a:hover{ /*当鼠标移动到a标记的时候状态*/</p>
<p>color:#060;</p>
<p>text-decoration:underline;</p>
<p>font-size:24px;</p>
<p>}</p>
<p>a:active{ /*当鼠标点击下去的状态*/</p>
<p>color:#00F;</p>
<p>text-decoration:underline;</p>
<p>font-size:24px;</p>
<p>}</p>
<p>&lt;/style&gt;</p>
<p>&lt;a href=&#8221;#&#8221;&gt;超链接1&lt;/a&gt; &lt;br&gt;</p>
<p>&lt;a href=&#8221;#&#8221;&gt;超链接2&lt;/a&gt;</p>
<p><img loading="lazy" decoding="async" width="341" height="114" class="wp-image-223" src="/wp-content/uploads/2018/05/word-image-197.png" srcset="/wp-content/uploads/2018/05/word-image-197.png 341w, /wp-content/uploads/2018/05/word-image-197-300x100.png 300w" sizes="(max-width: 341px) 100vw, 341px" /></p>
<p>例题一</p>
<p><img loading="lazy" decoding="async" width="481" height="180" class="wp-image-224" src="/wp-content/uploads/2018/05/word-image-198.png" srcset="/wp-content/uploads/2018/05/word-image-198.png 481w, /wp-content/uploads/2018/05/word-image-198-300x112.png 300w" sizes="(max-width: 481px) 100vw, 481px" /></p>
<p>例题二：</p>
<p><img loading="lazy" decoding="async" width="952" height="239" class="wp-image-225" src="/wp-content/uploads/2018/05/word-image-199.png" srcset="/wp-content/uploads/2018/05/word-image-199.png 952w, /wp-content/uploads/2018/05/word-image-199-300x75.png 300w, /wp-content/uploads/2018/05/word-image-199-768x193.png 768w" sizes="(max-width: 952px) 100vw, 952px" /></p>
]]></content:encoded>
					
					<wfw:commentRss>/%e5%89%8d%e7%ab%af%e6%8a%80%e6%9c%af/193.html/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
